name: env-runs-on-windows

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  verify-conda-windows:
    name: verify-${{ matrix.os }}-Py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["windows-latest"]
        python-version: ["3.8"]
    defaults:
      run:
        shell: bash -l {0}
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Print what we want to install
      - run: |
          cat bdl_2022f_windows.yml
      # Create the env via conda
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: bdl_2022f_env
          environment-file: bdl_2022f_windows.yml
          auto-update-conda: true
          auto-activate-base: false
          python-version: ${{ matrix.python-version }}
          channels: pytorch
      # Verify the install by printing out the packages  
      - run: |
          conda info
          conda list
          conda config --show-sources
          conda config --show
          conda activate bdl_2022f_env
          which python
          python --version
          python -c "import numpy; print(numpy.__version__)"
          python -c "import scipy; print(scipy.__version__)"
          python -c "import torch; x = torch.tensor([3.0], requires_grad=True); y = torch.square(x); grad = torch.autograd.grad(y, x, create_graph=True); print('PyTorch says grad of x^2 at x=2 is: ' + str(grad[0].item()))"
